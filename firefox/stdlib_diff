--- stdlib.h	2023-08-25 22:50:44.585006862 +0800
+++ stdlib_buster.h	2023-08-25 22:56:24.793011586 +0800
@@ -1,5 +1,4 @@
-/* Copyright (C) 1991-2023 Free Software Foundation, Inc.
-   Copyright The GNU Toolchain Authors.
+/* Copyright (C) 1991-2018 Free Software Foundation, Inc.
    This file is part of the GNU C Library.
 
    The GNU C Library is free software; you can redistribute it and/or
@@ -14,7 +13,7 @@
 
    You should have received a copy of the GNU Lesser General Public
    License along with the GNU C Library; if not, see
-   <https://www.gnu.org/licenses/>.  */
+   <http://www.gnu.org/licenses/>.  */
 
 /*
  *	ISO C99 Standard: 7.20 General utilities	<stdlib.h>
@@ -209,7 +208,7 @@ extern unsigned long long int strtoull (
 #endif /* ISO C99 or use MISC.  */
 
 /* Convert a floating-point number to a string.  */
-#if __GLIBC_USE (IEC_60559_BFP_EXT_C2X)
+#if __GLIBC_USE (IEC_60559_BFP_EXT)
 extern int strfromd (char *__dest, size_t __size, const char *__format,
 		     double __f)
      __THROW __nonnull ((3));
@@ -398,7 +397,7 @@ extern long int a64l (const char *__s)
    `initstate' and `setstate' functions are those from BSD Unices.
    The `rand' and `srand' functions are required by the ANSI standard.
    We provide both interfaces to the same random number generator.  */
-/* Return a random long integer between 0 and 2^31-1 inclusive.  */
+/* Return a random long integer between 0 and RAND_MAX inclusive.  */
 extern long int random (void) __THROW;
 
 /* Seed the random number generator with the given number.  */
@@ -533,28 +532,14 @@ extern int seed48_r (unsigned short int
 extern int lcong48_r (unsigned short int __param[7],
 		      struct drand48_data *__buffer)
      __THROW __nonnull ((1, 2));
-
-/* Return a random integer between zero and 2**32-1 (inclusive).  */
-extern __uint32_t arc4random (void)
-     __THROW __wur;
-
-/* Fill the buffer with random data.  */
-extern void arc4random_buf (void *__buf, size_t __size)
-     __THROW __nonnull ((1));
-
-/* Return a random number between zero (inclusive) and the specified
-   limit (exclusive).  */
-extern __uint32_t arc4random_uniform (__uint32_t __upper_bound)
-     __THROW __wur;
 # endif	/* Use misc.  */
 #endif	/* Use misc or X/Open.  */
 
 /* Allocate SIZE bytes of memory.  */
-extern void *malloc (size_t __size) __THROW __attribute_malloc__
-     __attribute_alloc_size__ ((1)) __wur;
+extern void *malloc (size_t __size) __THROW __attribute_malloc__ __wur;
 /* Allocate NMEMB elements of SIZE bytes each, all initialized to 0.  */
 extern void *calloc (size_t __nmemb, size_t __size)
-     __THROW __attribute_malloc__ __attribute_alloc_size__ ((1, 2)) __wur;
+     __THROW __attribute_malloc__ __wur;
 
 /* Re-allocate the previously allocated block
    in PTR, making the new block SIZE bytes long.  */
@@ -562,27 +547,21 @@ extern void *calloc (size_t __nmemb, siz
    the same pointer that was passed to it, aliasing needs to be allowed
    between objects pointed by the old and new pointers.  */
 extern void *realloc (void *__ptr, size_t __size)
-     __THROW __attribute_warn_unused_result__ __attribute_alloc_size__ ((2));
-
-/* Free a block allocated by `malloc', `realloc' or `calloc'.  */
-extern void free (void *__ptr) __THROW;
+     __THROW __attribute_warn_unused_result__;
 
-#ifdef __USE_MISC
+#ifdef __USE_GNU
 /* Re-allocate the previously allocated block in PTR, making the new
    block large enough for NMEMB elements of SIZE bytes each.  */
 /* __attribute_malloc__ is not used, because if reallocarray returns
    the same pointer that was passed to it, aliasing needs to be allowed
    between objects pointed by the old and new pointers.  */
 extern void *reallocarray (void *__ptr, size_t __nmemb, size_t __size)
-     __THROW __attribute_warn_unused_result__
-     __attribute_alloc_size__ ((2, 3))
-    __attr_dealloc_free;
-
-/* Add reallocarray as its own deallocator.  */
-extern void *reallocarray (void *__ptr, size_t __nmemb, size_t __size)
-     __THROW __attr_dealloc (reallocarray, 1);
+     __THROW __attribute_warn_unused_result__;
 #endif
 
+/* Free a block allocated by `malloc', `realloc' or `calloc'.  */
+extern void free (void *__ptr) __THROW;
+
 #ifdef __USE_MISC
 # include <alloca.h>
 #endif /* Use misc.  */
@@ -590,8 +569,7 @@ extern void *reallocarray (void *__ptr,
 #if (defined __USE_XOPEN_EXTENDED && !defined __USE_XOPEN2K) \
     || defined __USE_MISC
 /* Allocate SIZE bytes on a page boundary.  The storage cannot be freed.  */
-extern void *valloc (size_t __size) __THROW __attribute_malloc__
-     __attribute_alloc_size__ ((1)) __wur;
+extern void *valloc (size_t __size) __THROW __attribute_malloc__ __wur;
 #endif
 
 #ifdef __USE_XOPEN2K
@@ -603,8 +581,7 @@ extern int posix_memalign (void **__memp
 #ifdef __USE_ISOC11
 /* ISO C variant of aligned allocation.  */
 extern void *aligned_alloc (size_t __alignment, size_t __size)
-     __THROW __attribute_malloc__ __attribute_alloc_align__ ((1))
-     __attribute_alloc_size__ ((2)) __wur;
+     __THROW __attribute_malloc__ __attribute_alloc_size__ ((2)) __wur;
 #endif
 
 /* Abort execution and generate a core-dump.  */
@@ -808,8 +785,7 @@ extern int system (const char *__command
 /* Return a malloc'd string containing the canonical absolute name of the
    existing named file.  */
 extern char *canonicalize_file_name (const char *__name)
-     __THROW __nonnull ((1)) __attribute_malloc__
-     __attr_dealloc_free __wur;
+     __THROW __nonnull ((1)) __wur;
 #endif
 
 #if defined __USE_MISC || defined __USE_XOPEN_EXTENDED
@@ -952,14 +928,12 @@ extern int wctomb (char *__s, wchar_t __
 
 /* Convert a multibyte string to a wide char string.  */
 extern size_t mbstowcs (wchar_t *__restrict  __pwcs,
-			const char *__restrict __s, size_t __n) __THROW
-    __attr_access ((__read_only__, 2));
+			const char *__restrict __s, size_t __n) __THROW;
 /* Convert a wide char string to multibyte string.  */
 extern size_t wcstombs (char *__restrict __s,
 			const wchar_t *__restrict __pwcs, size_t __n)
-     __THROW
-  __fortified_attr_access (__write_only__, 1, 3)
-  __attr_access ((__read_only__, 2));
+     __THROW;
+
 
 #ifdef __USE_MISC
 /* Determine whether the string value of RESPONSE matches the affirmation
@@ -1013,7 +987,7 @@ extern char *ptsname (int __fd) __THROW
    terminal associated with the master FD is open on in BUF.
    Return 0 on success, otherwise an error number.  */
 extern int ptsname_r (int __fd, char *__buf, size_t __buflen)
-     __THROW __nonnull ((2)) __fortified_attr_access (__write_only__, 2, 3);
+     __THROW __nonnull ((2));
 
 /* Open a master pseudo terminal and return its file descriptor.  */
 extern int getpt (void);
@@ -1039,9 +1013,7 @@ extern int ttyslot (void) __THROW;
 #if __USE_FORTIFY_LEVEL > 0 && defined __fortify_function
 # include <bits/stdlib.h>
 #endif
-
-#include <bits/floatn.h>
-#if defined __LDBL_COMPAT || __LDOUBLE_REDIRECTS_TO_FLOAT128_ABI == 1
+#ifdef __LDBL_COMPAT
 # include <bits/stdlib-ldbl.h>
 #endif
 
